<?php
require_once __DIR__ . '/vendor/autoload.php';
require_once __DIR__ . '/pb/GPBMetadata/Helloworld.php';
require_once __DIR__ . '/pb/Helloworld/HelloReply.php';
require_once __DIR__ . '/pb/Helloworld/HelloRequest.php';
require_once __DIR__ . '/grpc_server.php';
require_once __DIR__ . '/helloworld.grpc_server.pb.php';

// must implement the interface
class Greeter implements \Helloworld\GreeterServerInterface {
    function __construct() {
      // do any class specific stuff
    }

    public function SayHello(\Helloworld\HelloRequest $arg): \Helloworld\HelloReply {
      $m = new \Helloworld\HelloReply();
      $m->setMessage(sprintf("Hello %s", $arg->getName()));
      return $m;
    }
}

class Interceptor implements \GRPCInterceptor {
  function __contruct() {

  }

  public function intercept(\GRPCCallInfo $info, $handler, $req) {
    $start = microtime(true);
    $ret = call_user_func($handler, $req);
    $duration = microtime(true) - $start;
    // could send statsd (extended) with labels for service and name
    return $ret;
  }
}

$server = new GRPCServer();
//$server->AddInterceptor(new Interceptor());

$g = new \Helloworld\GreeterServer();

$g->RegisterGreeterServer($server, new Greeter());

$server->Serve("/helloworld.Greeter/SayHello");

?>
